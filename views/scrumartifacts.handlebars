<div class="content single-post lexicon lexicon-en">
    <!-- Blog Article Photo header -->
    <div class="blog-imageheader">
        <div class="header-body remove-padding">
            <div class="bg-image" style="background-image: url('/auditmainpic/duplicate.jpg');"></div>
            <div class="gradient white-gradient"></div>
            <div class="title-strip">
                <div class="container reduced">
                    <div class="columns is-centered is-multiline">
                        <div class="column is-12-mobile is-10-tablet is-10-desktop">
                            <h1 class="title is-2 is-heavy is-white">Scrum Artifacts</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Lexicon Article Body -->
    <section class="blogpost-hero hero is-medium">
        <div class="hero-body remove-padding">
            <div class="container reduced">
                <div class="columns is-centered is-multiline">
                    <div class="column is-12-mobile is-10-tablet is-10-desktop">
                        <nav class="breadcrumb" aria-label="breadcrumbs">
                            <ul>
                                <li><a href="/{{{__ "lang"}}}">{{{__ "services"}}}</a></li>
                                <li><a href="/{{{__ "lang"}}}/scrum">Scrum</a></li>
                            </ul>
                        </nav>
                    </div>
                    <div class="column is-12-mobile is-10-tablet is-10-desktop post">

                        <h2>Product Backlog</h2>
                        <p>What: Dynamic Ordered List of known items needed to be delivered. It continuously evolves (prod & environment)
                            Resp: PO: content, priority,ordering, availability

                            Each Items: description, order, estimate, and value. Also sometimes test descriptions that will prove its completeness when “Done.”

                            A good user story should be:
                            “I” ndependent (of all others)
                            “N” egotiable (not a specific contract for features)
                            “V” aluable
                            “E” stimable (to a good approximation)
                            “S” mall (so as to fit within an iteration)
                            “T” estable (in principle, even if there isn’t a test for it yet)

                            A good user story should be:
                            “I” ndependent (self contained)
                            “N” egotiable (leave space for discussion)
                            “V” aluable (add Value)
                            “E” stimable (to a good approximation)
                            “S” mall (so as to fit within a sprint)
                            “T” estable (item should have enough information to be testable)

                            <br><br><br>
                            Example of a User Story:
                            <br><br>
                            1. “As a client, I would like to be able to make a purchase without log-in so that I don’t waste time I do not want to invest.”
                            <br><br>
                            2. More Description if applicable
                            <br><br>
                            3. Acceptance criteria:
                            <br>
                            User is offereed the option during checkout<br>
                            User still needs to enter an email address<br>
                            User must still be offered to be added to newsletter<br><br>

                            4.Estimation: 3 Story Points


                        </p>

                        <p>
                            Monitoring Progress Toward Goals
                            Various projective practices upon trending have been used to forecast progress, like burndowns, burn-ups, or cumulative flows. These have proven useful. However, these do not replace the importance of empiricism. In
                            complex environments, what will happen is unknown. Only what has already happened may be used for forward-looking decision-making.
                        </p>
                        <h2>Sprint backlog</h2>
                        <p>
                            What: Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal.It is a forecast by the Development Team about what functionality will be in the next
                            Increment and the work needed to deliver that functionality into a “Done” Increment.
                        </p>



                        <p>The Sprint Backlog makes visible all the work that the Development Team identifies as necessary to meet the Sprint Goal. To ensure continuous improvement, it includes at least one high priority process improvement
                            identified in the previous Retrospective meeting. The
                            Sprint Backlog is a plan with enough detail that changes in progress can be understood in the Daily Scrum. The Development Team modifies the Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the
                            Sprint. This emergence occurs as the Development Team works through the plan and learns more about the work needed to achieve the Sprint Goal.
                        </p>

                        <p>As new work is required, the Development Team adds it to the Sprint Backlog. As work is performed or completed, the estimated remaining work is updated. When elements of the plan are deemed unnecessary, they are removed.
                            Only the Development Team can change its Sprint Backlog during a Sprint. The Sprint Backlog is a highly visible, real-time picture of the work that the Development Team plans to accomplish during the Sprint, and it belongs
                            solely to the Development Team.</p>

                        <p>Monitoring Sprint Progress
                            At any point in time in a Sprint, the total work remaining in the Sprint Backlog can be summed. The Development Team tracks this total work remaining at least for every Daily Scrum to project the likelihood of achieving
                            the Sprint Goal. By tracking the remaining work throughout the Sprint, the Development Team can manage its progress.
                        </p>


                        <p>Increment
                            The Increment is the sum of all the Product Backlog items completed during a Sprint and the value of the increments of all previous Sprints. At the end of a Sprint, the new Increment must be “Done,” which means it must be
                            in useable condition and meet the Scrum Team’s definition of “Done.” An increment is a body of inspectable, done work that supports empiricism at the end of the Sprint. The increment is a step toward a vision or goal. The
                            increment must be in useable condition regardless of whether the Product Owner decides to release it
                        </p>

                        <h2>Artifact Transparency: Definition of “Done”

                        </h2>
                        <p> When a Product Backlog item is described as “Done”, each team member must understand what “Done” means to ensure transparency.

                            The same definition guides the Development Team in knowing how many Product Backlog items it can select during a Sprint Planning.

                            As Scrum Teams mature, it is expected that their definitions of “Done” will expand to include more stringent criteria for higher quality. New definitions, as used, may uncover work to be done in previously “Done”
                            increments.

                            For example, in software, a Definition of Done may be: “Done means coded to standards, reviewed, implemented with unit Test-Driven Development, tested with 100 percent test automation, integrated and documented.”
                            In a services context, it may be like this: “Done means every task under the User Story has been completed and any work created is attached to the User Story so the Product Owner can review it and make sure it meets his or
                            her expectations.”

                        </p>

                    </div>

                </div>
            </div>
        </div>
</div>
</section>
<div class="columns is-centered hero-body">
    <div class="column is-6">

        <div class="column is-8 is-offset-1 intro-image">
            <img alt="Scrum illustration" class="illustration" src="/images/landingpage_intro_rocket.jpg" />
        </div>

    </div>

    <div class="column is-5-desktop is-offset-1">
        <h3> About Scrum</h3>

        <p><a href="/en/scrum/pillars">Scrum’s Three Pillars of Empiricism</a></p>
        <p><a href="/en/scrum/team">The Scrum Team</a></p>
        <p><a href="/en/scrum/events">Scrum Events</a></p>
        <p><a href="/en/scrum/artifacts">Scrum Artifacts & Transparency</a></p>


    </div>
</div>